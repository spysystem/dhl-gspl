<?php
/**
 * ServicePointCapabilities
 *
 * PHP version 5
 *
 * @category Class
 * @package  Spy\Package\SpyClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DHL Global Service Point Locator API
 *
 * Web service for getting DHL Service Points
 *
 * OpenAPI spec version: 1.0.0
 * Contact: info@spysystem.dk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Spy\Package\SpyClient\Model;

use \ArrayAccess;
use \Spy\Package\SpyClient\ObjectSerializer;

/**
 * ServicePointCapabilities Class Doc Comment
 *
 * @category Class
 * @package  Spy\Package\SpyClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ServicePointCapabilities implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ServicePointCapabilities';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'parking_available' => 'bool',
        'disabled_access' => 'bool',
        'shipment_drop_off' => 'bool',
        'shipment_collection' => 'bool',
        'international_shipping' => 'bool',
        'domestic_shipping' => 'bool',
        'account_shippers' => 'bool',
        'label_printing' => 'bool',
        'insurance' => 'bool',
        'import_charges' => 'bool',
        'packaging' => 'bool',
        'receiver_paid' => 'bool',
        'visa_program' => 'bool',
        'pay_with_cash' => 'bool',
        'pay_with_credit_card' => 'bool',
        'pay_with_cheque' => 'bool',
        'pay_with_mobile' => 'bool',
        'pay_with_pay_pal' => 'bool',
        'parkint_title' => 'string',
        'disabled_access_title' => 'string',
        'piece_weight_limit' => 'int',
        'piece_weight_limit_unit' => 'string',
        'piece_dimensions_limit' => '\Spy\Package\SpyClient\Model\Dimensions',
        'piece_dimensions_limit_unit' => 'string',
        'piece_count_limit' => 'int',
        'html' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'parking_available' => null,
        'disabled_access' => null,
        'shipment_drop_off' => null,
        'shipment_collection' => null,
        'international_shipping' => null,
        'domestic_shipping' => null,
        'account_shippers' => null,
        'label_printing' => null,
        'insurance' => null,
        'import_charges' => null,
        'packaging' => null,
        'receiver_paid' => null,
        'visa_program' => null,
        'pay_with_cash' => null,
        'pay_with_credit_card' => null,
        'pay_with_cheque' => null,
        'pay_with_mobile' => null,
        'pay_with_pay_pal' => null,
        'parkint_title' => null,
        'disabled_access_title' => null,
        'piece_weight_limit' => null,
        'piece_weight_limit_unit' => null,
        'piece_dimensions_limit' => null,
        'piece_dimensions_limit_unit' => null,
        'piece_count_limit' => null,
        'html' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'parking_available' => 'parkingAvailable',
        'disabled_access' => 'disabledAccess',
        'shipment_drop_off' => 'shipmentDropOff',
        'shipment_collection' => 'shipmentCollection',
        'international_shipping' => 'internationalShipping',
        'domestic_shipping' => 'domesticShipping',
        'account_shippers' => 'accountShippers',
        'label_printing' => 'labelPrinting',
        'insurance' => 'insurance',
        'import_charges' => 'importCharges',
        'packaging' => 'packaging',
        'receiver_paid' => 'receiverPaid',
        'visa_program' => 'visaProgram',
        'pay_with_cash' => 'payWithCash',
        'pay_with_credit_card' => 'payWithCreditCard',
        'pay_with_cheque' => 'payWithCheque',
        'pay_with_mobile' => 'payWithMobile',
        'pay_with_pay_pal' => 'payWithPayPal',
        'parkint_title' => 'parkintTitle',
        'disabled_access_title' => 'disabledAccessTitle',
        'piece_weight_limit' => 'pieceWeightLimit',
        'piece_weight_limit_unit' => 'pieceWeightLimitUnit',
        'piece_dimensions_limit' => 'pieceDimensionsLimit',
        'piece_dimensions_limit_unit' => 'pieceDimensionsLimitUnit',
        'piece_count_limit' => 'pieceCountLimit',
        'html' => 'html'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'parking_available' => 'setParkingAvailable',
        'disabled_access' => 'setDisabledAccess',
        'shipment_drop_off' => 'setShipmentDropOff',
        'shipment_collection' => 'setShipmentCollection',
        'international_shipping' => 'setInternationalShipping',
        'domestic_shipping' => 'setDomesticShipping',
        'account_shippers' => 'setAccountShippers',
        'label_printing' => 'setLabelPrinting',
        'insurance' => 'setInsurance',
        'import_charges' => 'setImportCharges',
        'packaging' => 'setPackaging',
        'receiver_paid' => 'setReceiverPaid',
        'visa_program' => 'setVisaProgram',
        'pay_with_cash' => 'setPayWithCash',
        'pay_with_credit_card' => 'setPayWithCreditCard',
        'pay_with_cheque' => 'setPayWithCheque',
        'pay_with_mobile' => 'setPayWithMobile',
        'pay_with_pay_pal' => 'setPayWithPayPal',
        'parkint_title' => 'setParkintTitle',
        'disabled_access_title' => 'setDisabledAccessTitle',
        'piece_weight_limit' => 'setPieceWeightLimit',
        'piece_weight_limit_unit' => 'setPieceWeightLimitUnit',
        'piece_dimensions_limit' => 'setPieceDimensionsLimit',
        'piece_dimensions_limit_unit' => 'setPieceDimensionsLimitUnit',
        'piece_count_limit' => 'setPieceCountLimit',
        'html' => 'setHtml'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'parking_available' => 'getParkingAvailable',
        'disabled_access' => 'getDisabledAccess',
        'shipment_drop_off' => 'getShipmentDropOff',
        'shipment_collection' => 'getShipmentCollection',
        'international_shipping' => 'getInternationalShipping',
        'domestic_shipping' => 'getDomesticShipping',
        'account_shippers' => 'getAccountShippers',
        'label_printing' => 'getLabelPrinting',
        'insurance' => 'getInsurance',
        'import_charges' => 'getImportCharges',
        'packaging' => 'getPackaging',
        'receiver_paid' => 'getReceiverPaid',
        'visa_program' => 'getVisaProgram',
        'pay_with_cash' => 'getPayWithCash',
        'pay_with_credit_card' => 'getPayWithCreditCard',
        'pay_with_cheque' => 'getPayWithCheque',
        'pay_with_mobile' => 'getPayWithMobile',
        'pay_with_pay_pal' => 'getPayWithPayPal',
        'parkint_title' => 'getParkintTitle',
        'disabled_access_title' => 'getDisabledAccessTitle',
        'piece_weight_limit' => 'getPieceWeightLimit',
        'piece_weight_limit_unit' => 'getPieceWeightLimitUnit',
        'piece_dimensions_limit' => 'getPieceDimensionsLimit',
        'piece_dimensions_limit_unit' => 'getPieceDimensionsLimitUnit',
        'piece_count_limit' => 'getPieceCountLimit',
        'html' => 'getHtml'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['parking_available'] = isset($data['parking_available']) ? $data['parking_available'] : null;
        $this->container['disabled_access'] = isset($data['disabled_access']) ? $data['disabled_access'] : null;
        $this->container['shipment_drop_off'] = isset($data['shipment_drop_off']) ? $data['shipment_drop_off'] : null;
        $this->container['shipment_collection'] = isset($data['shipment_collection']) ? $data['shipment_collection'] : null;
        $this->container['international_shipping'] = isset($data['international_shipping']) ? $data['international_shipping'] : null;
        $this->container['domestic_shipping'] = isset($data['domestic_shipping']) ? $data['domestic_shipping'] : null;
        $this->container['account_shippers'] = isset($data['account_shippers']) ? $data['account_shippers'] : null;
        $this->container['label_printing'] = isset($data['label_printing']) ? $data['label_printing'] : null;
        $this->container['insurance'] = isset($data['insurance']) ? $data['insurance'] : null;
        $this->container['import_charges'] = isset($data['import_charges']) ? $data['import_charges'] : null;
        $this->container['packaging'] = isset($data['packaging']) ? $data['packaging'] : null;
        $this->container['receiver_paid'] = isset($data['receiver_paid']) ? $data['receiver_paid'] : null;
        $this->container['visa_program'] = isset($data['visa_program']) ? $data['visa_program'] : null;
        $this->container['pay_with_cash'] = isset($data['pay_with_cash']) ? $data['pay_with_cash'] : null;
        $this->container['pay_with_credit_card'] = isset($data['pay_with_credit_card']) ? $data['pay_with_credit_card'] : null;
        $this->container['pay_with_cheque'] = isset($data['pay_with_cheque']) ? $data['pay_with_cheque'] : null;
        $this->container['pay_with_mobile'] = isset($data['pay_with_mobile']) ? $data['pay_with_mobile'] : null;
        $this->container['pay_with_pay_pal'] = isset($data['pay_with_pay_pal']) ? $data['pay_with_pay_pal'] : null;
        $this->container['parkint_title'] = isset($data['parkint_title']) ? $data['parkint_title'] : null;
        $this->container['disabled_access_title'] = isset($data['disabled_access_title']) ? $data['disabled_access_title'] : null;
        $this->container['piece_weight_limit'] = isset($data['piece_weight_limit']) ? $data['piece_weight_limit'] : null;
        $this->container['piece_weight_limit_unit'] = isset($data['piece_weight_limit_unit']) ? $data['piece_weight_limit_unit'] : null;
        $this->container['piece_dimensions_limit'] = isset($data['piece_dimensions_limit']) ? $data['piece_dimensions_limit'] : null;
        $this->container['piece_dimensions_limit_unit'] = isset($data['piece_dimensions_limit_unit']) ? $data['piece_dimensions_limit_unit'] : null;
        $this->container['piece_count_limit'] = isset($data['piece_count_limit']) ? $data['piece_count_limit'] : null;
        $this->container['html'] = isset($data['html']) ? $data['html'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets parking_available
     *
     * @return bool|null
     */
    public function getParkingAvailable()
    {
        return $this->container['parking_available'];
    }

    /**
     * Sets parking_available
     *
     * @param bool|null $parking_available parking_available
     *
     * @return $this
     */
    public function setParkingAvailable($parking_available)
    {
        $this->container['parking_available'] = $parking_available;

        return $this;
    }

    /**
     * Gets disabled_access
     *
     * @return bool|null
     */
    public function getDisabledAccess()
    {
        return $this->container['disabled_access'];
    }

    /**
     * Sets disabled_access
     *
     * @param bool|null $disabled_access disabled_access
     *
     * @return $this
     */
    public function setDisabledAccess($disabled_access)
    {
        $this->container['disabled_access'] = $disabled_access;

        return $this;
    }

    /**
     * Gets shipment_drop_off
     *
     * @return bool|null
     */
    public function getShipmentDropOff()
    {
        return $this->container['shipment_drop_off'];
    }

    /**
     * Sets shipment_drop_off
     *
     * @param bool|null $shipment_drop_off shipment_drop_off
     *
     * @return $this
     */
    public function setShipmentDropOff($shipment_drop_off)
    {
        $this->container['shipment_drop_off'] = $shipment_drop_off;

        return $this;
    }

    /**
     * Gets shipment_collection
     *
     * @return bool|null
     */
    public function getShipmentCollection()
    {
        return $this->container['shipment_collection'];
    }

    /**
     * Sets shipment_collection
     *
     * @param bool|null $shipment_collection shipment_collection
     *
     * @return $this
     */
    public function setShipmentCollection($shipment_collection)
    {
        $this->container['shipment_collection'] = $shipment_collection;

        return $this;
    }

    /**
     * Gets international_shipping
     *
     * @return bool|null
     */
    public function getInternationalShipping()
    {
        return $this->container['international_shipping'];
    }

    /**
     * Sets international_shipping
     *
     * @param bool|null $international_shipping international_shipping
     *
     * @return $this
     */
    public function setInternationalShipping($international_shipping)
    {
        $this->container['international_shipping'] = $international_shipping;

        return $this;
    }

    /**
     * Gets domestic_shipping
     *
     * @return bool|null
     */
    public function getDomesticShipping()
    {
        return $this->container['domestic_shipping'];
    }

    /**
     * Sets domestic_shipping
     *
     * @param bool|null $domestic_shipping domestic_shipping
     *
     * @return $this
     */
    public function setDomesticShipping($domestic_shipping)
    {
        $this->container['domestic_shipping'] = $domestic_shipping;

        return $this;
    }

    /**
     * Gets account_shippers
     *
     * @return bool|null
     */
    public function getAccountShippers()
    {
        return $this->container['account_shippers'];
    }

    /**
     * Sets account_shippers
     *
     * @param bool|null $account_shippers account_shippers
     *
     * @return $this
     */
    public function setAccountShippers($account_shippers)
    {
        $this->container['account_shippers'] = $account_shippers;

        return $this;
    }

    /**
     * Gets label_printing
     *
     * @return bool|null
     */
    public function getLabelPrinting()
    {
        return $this->container['label_printing'];
    }

    /**
     * Sets label_printing
     *
     * @param bool|null $label_printing label_printing
     *
     * @return $this
     */
    public function setLabelPrinting($label_printing)
    {
        $this->container['label_printing'] = $label_printing;

        return $this;
    }

    /**
     * Gets insurance
     *
     * @return bool|null
     */
    public function getInsurance()
    {
        return $this->container['insurance'];
    }

    /**
     * Sets insurance
     *
     * @param bool|null $insurance insurance
     *
     * @return $this
     */
    public function setInsurance($insurance)
    {
        $this->container['insurance'] = $insurance;

        return $this;
    }

    /**
     * Gets import_charges
     *
     * @return bool|null
     */
    public function getImportCharges()
    {
        return $this->container['import_charges'];
    }

    /**
     * Sets import_charges
     *
     * @param bool|null $import_charges import_charges
     *
     * @return $this
     */
    public function setImportCharges($import_charges)
    {
        $this->container['import_charges'] = $import_charges;

        return $this;
    }

    /**
     * Gets packaging
     *
     * @return bool|null
     */
    public function getPackaging()
    {
        return $this->container['packaging'];
    }

    /**
     * Sets packaging
     *
     * @param bool|null $packaging packaging
     *
     * @return $this
     */
    public function setPackaging($packaging)
    {
        $this->container['packaging'] = $packaging;

        return $this;
    }

    /**
     * Gets receiver_paid
     *
     * @return bool|null
     */
    public function getReceiverPaid()
    {
        return $this->container['receiver_paid'];
    }

    /**
     * Sets receiver_paid
     *
     * @param bool|null $receiver_paid receiver_paid
     *
     * @return $this
     */
    public function setReceiverPaid($receiver_paid)
    {
        $this->container['receiver_paid'] = $receiver_paid;

        return $this;
    }

    /**
     * Gets visa_program
     *
     * @return bool|null
     */
    public function getVisaProgram()
    {
        return $this->container['visa_program'];
    }

    /**
     * Sets visa_program
     *
     * @param bool|null $visa_program visa_program
     *
     * @return $this
     */
    public function setVisaProgram($visa_program)
    {
        $this->container['visa_program'] = $visa_program;

        return $this;
    }

    /**
     * Gets pay_with_cash
     *
     * @return bool|null
     */
    public function getPayWithCash()
    {
        return $this->container['pay_with_cash'];
    }

    /**
     * Sets pay_with_cash
     *
     * @param bool|null $pay_with_cash pay_with_cash
     *
     * @return $this
     */
    public function setPayWithCash($pay_with_cash)
    {
        $this->container['pay_with_cash'] = $pay_with_cash;

        return $this;
    }

    /**
     * Gets pay_with_credit_card
     *
     * @return bool|null
     */
    public function getPayWithCreditCard()
    {
        return $this->container['pay_with_credit_card'];
    }

    /**
     * Sets pay_with_credit_card
     *
     * @param bool|null $pay_with_credit_card pay_with_credit_card
     *
     * @return $this
     */
    public function setPayWithCreditCard($pay_with_credit_card)
    {
        $this->container['pay_with_credit_card'] = $pay_with_credit_card;

        return $this;
    }

    /**
     * Gets pay_with_cheque
     *
     * @return bool|null
     */
    public function getPayWithCheque()
    {
        return $this->container['pay_with_cheque'];
    }

    /**
     * Sets pay_with_cheque
     *
     * @param bool|null $pay_with_cheque pay_with_cheque
     *
     * @return $this
     */
    public function setPayWithCheque($pay_with_cheque)
    {
        $this->container['pay_with_cheque'] = $pay_with_cheque;

        return $this;
    }

    /**
     * Gets pay_with_mobile
     *
     * @return bool|null
     */
    public function getPayWithMobile()
    {
        return $this->container['pay_with_mobile'];
    }

    /**
     * Sets pay_with_mobile
     *
     * @param bool|null $pay_with_mobile pay_with_mobile
     *
     * @return $this
     */
    public function setPayWithMobile($pay_with_mobile)
    {
        $this->container['pay_with_mobile'] = $pay_with_mobile;

        return $this;
    }

    /**
     * Gets pay_with_pay_pal
     *
     * @return bool|null
     */
    public function getPayWithPayPal()
    {
        return $this->container['pay_with_pay_pal'];
    }

    /**
     * Sets pay_with_pay_pal
     *
     * @param bool|null $pay_with_pay_pal pay_with_pay_pal
     *
     * @return $this
     */
    public function setPayWithPayPal($pay_with_pay_pal)
    {
        $this->container['pay_with_pay_pal'] = $pay_with_pay_pal;

        return $this;
    }

    /**
     * Gets parkint_title
     *
     * @return string|null
     */
    public function getParkintTitle()
    {
        return $this->container['parkint_title'];
    }

    /**
     * Sets parkint_title
     *
     * @param string|null $parkint_title parkint_title
     *
     * @return $this
     */
    public function setParkintTitle($parkint_title)
    {
        $this->container['parkint_title'] = $parkint_title;

        return $this;
    }

    /**
     * Gets disabled_access_title
     *
     * @return string|null
     */
    public function getDisabledAccessTitle()
    {
        return $this->container['disabled_access_title'];
    }

    /**
     * Sets disabled_access_title
     *
     * @param string|null $disabled_access_title disabled_access_title
     *
     * @return $this
     */
    public function setDisabledAccessTitle($disabled_access_title)
    {
        $this->container['disabled_access_title'] = $disabled_access_title;

        return $this;
    }

    /**
     * Gets piece_weight_limit
     *
     * @return int|null
     */
    public function getPieceWeightLimit()
    {
        return $this->container['piece_weight_limit'];
    }

    /**
     * Sets piece_weight_limit
     *
     * @param int|null $piece_weight_limit piece_weight_limit
     *
     * @return $this
     */
    public function setPieceWeightLimit($piece_weight_limit)
    {
        $this->container['piece_weight_limit'] = $piece_weight_limit;

        return $this;
    }

    /**
     * Gets piece_weight_limit_unit
     *
     * @return string|null
     */
    public function getPieceWeightLimitUnit()
    {
        return $this->container['piece_weight_limit_unit'];
    }

    /**
     * Sets piece_weight_limit_unit
     *
     * @param string|null $piece_weight_limit_unit piece_weight_limit_unit
     *
     * @return $this
     */
    public function setPieceWeightLimitUnit($piece_weight_limit_unit)
    {
        $this->container['piece_weight_limit_unit'] = $piece_weight_limit_unit;

        return $this;
    }

    /**
     * Gets piece_dimensions_limit
     *
     * @return \Spy\Package\SpyClient\Model\Dimensions|null
     */
    public function getPieceDimensionsLimit()
    {
        return $this->container['piece_dimensions_limit'];
    }

    /**
     * Sets piece_dimensions_limit
     *
     * @param \Spy\Package\SpyClient\Model\Dimensions|null $piece_dimensions_limit piece_dimensions_limit
     *
     * @return $this
     */
    public function setPieceDimensionsLimit($piece_dimensions_limit)
    {
        $this->container['piece_dimensions_limit'] = $piece_dimensions_limit;

        return $this;
    }

    /**
     * Gets piece_dimensions_limit_unit
     *
     * @return string|null
     */
    public function getPieceDimensionsLimitUnit()
    {
        return $this->container['piece_dimensions_limit_unit'];
    }

    /**
     * Sets piece_dimensions_limit_unit
     *
     * @param string|null $piece_dimensions_limit_unit piece_dimensions_limit_unit
     *
     * @return $this
     */
    public function setPieceDimensionsLimitUnit($piece_dimensions_limit_unit)
    {
        $this->container['piece_dimensions_limit_unit'] = $piece_dimensions_limit_unit;

        return $this;
    }

    /**
     * Gets piece_count_limit
     *
     * @return int|null
     */
    public function getPieceCountLimit()
    {
        return $this->container['piece_count_limit'];
    }

    /**
     * Sets piece_count_limit
     *
     * @param int|null $piece_count_limit piece_count_limit
     *
     * @return $this
     */
    public function setPieceCountLimit($piece_count_limit)
    {
        $this->container['piece_count_limit'] = $piece_count_limit;

        return $this;
    }

    /**
     * Gets html
     *
     * @return string|null
     */
    public function getHtml()
    {
        return $this->container['html'];
    }

    /**
     * Sets html
     *
     * @param string|null $html html
     *
     * @return $this
     */
    public function setHtml($html)
    {
        $this->container['html'] = $html;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


